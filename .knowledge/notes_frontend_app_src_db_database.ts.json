{"is_source_file": true, "format": "TypeScript", "description": "This file defines a database access layer for managing 'notes' in a SQLite database in a React Native environment. It includes type definitions, database initialization, and functions for creating, reading, updating, deleting, and searching notes.", "external_files": ["expo-sqlite"], "external_methods": ["SQLite.openDatabaseAsync", "database.execAsync", "database.runAsync", "database.getFirstAsync", "database.getAllAsync"], "published": ["Note", "getDb", "createNote", "updateNote", "deleteNote", "getNote", "getAllNotes", "searchNotes"], "classes": [], "methods": [{"name": "export async function getDb(): Promise<SQLite.SQLiteDatabase> { getDb", "description": "Initializes and returns the SQLite database instance, ensuring the notes table exists with the appropriate schema.", "scope": "", "scopeKind": ""}, {"name": "export async function createNote(title: string, content: string): Promise<number> { createNote", "description": "Creates a new note with a title and content, returning the inserted note's ID.", "scope": "", "scopeKind": ""}, {"name": "export async function updateNote(id: number, title: string, content: string): Promise<void> { updateNote", "description": "Updates an existing note identified by its ID with new title and content.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteNote(id: number): Promise<void> { deleteNote", "description": "Deletes a note based on its ID.", "scope": "", "scopeKind": ""}, {"name": "export async function getNote(id: number): Promise<Note | null> { getNote", "description": "Retrieves a single note by its ID, returning null if not found.", "scope": "", "scopeKind": ""}, {"name": "export async function getAllNotes(): Promise<Note[]> { getAllNotes", "description": "Fetches all notes ordered by the last update time in descending order.", "scope": "", "scopeKind": ""}, {"name": "export async function searchNotes(query: string): Promise<Note[]> { searchNotes", "description": "Searches notes by title or content matching a query string.", "scope": "", "scopeKind": ""}], "calls": ["SQLite.openDatabaseAsync", "database.execAsync", "database.runAsync", "database.getFirstAsync", "database.getAllAsync"], "search-terms": ["notes database management", "SQLite initialization", "CRUD notes", "search notes", "TypeScript database interface"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "DB_NAME", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^const DB_NAME = 'notes.db';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^export type Note = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^export async function createNote(title: string, content: string): Promise<number> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "database", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^  const database = await getDb();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "database", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^  const database = await getDb();$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "database", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^  const database = await getDb();$/", "language": "TypeScript", "kind": "constant", "scope": "getAllNotes", "scopeKind": "function"}, {"_type": "tag", "name": "database", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^  const database = await getDb();$/", "language": "TypeScript", "kind": "constant", "scope": "getNote", "scopeKind": "function"}, {"_type": "tag", "name": "database", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^  const database = await getDb();$/", "language": "TypeScript", "kind": "constant", "scope": "searchNotes", "scopeKind": "function"}, {"_type": "tag", "name": "database", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^  const database = await getDb();$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "db", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^let db: SQLite.SQLiteDatabase | null = null;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^export async function deleteNote(id: number): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getAllNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^export async function getAllNotes(): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getDb", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^export async function getDb(): Promise<SQLite.SQLiteDatabase> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^export async function getNote(id: number): Promise<Note | null> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "like", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^  const like = `%${query}%`;$/", "language": "TypeScript", "kind": "constant", "scope": "searchNotes", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^  const res = await database.runAsync($/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "row", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^  const row = await database.getFirstAsync<Note>(`SELECT * FROM notes WHERE id = ?`, [id]);$/", "language": "TypeScript", "kind": "constant", "scope": "getNote", "scopeKind": "function"}, {"_type": "tag", "name": "rows", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^  const rows = await database.getAllAsync<Note>($/", "language": "TypeScript", "kind": "constant", "scope": "searchNotes", "scopeKind": "function"}, {"_type": "tag", "name": "rows", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^  const rows = await database.getAllAsync<Note>(`SELECT * FROM notes ORDER BY updated_at DESC`);$/", "language": "TypeScript", "kind": "constant", "scope": "getAllNotes", "scopeKind": "function"}, {"_type": "tag", "name": "searchNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^export async function searchNotes(query: string): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-146080-146090/notes_frontend_app/src/db/database.ts", "pattern": "/^export async function updateNote(id: number, title: string, content: string): Promise<void> {$/", "language": "TypeScript", "kind": "function"}], "hash": "fe5394a31bbed85827b334f69c785532", "format-version": 4, "code-base-name": "notes_frontend_app", "filename": "notes_frontend_app/src/db/database.ts", "fields": [{"name": "let db: SQLite.SQLiteDatabase | null = null;", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"17": ""}]}